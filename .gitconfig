[user]
  name = Andy Klimczak
  email = andyklimczak@fastmail.com
[alias]
  co = checkout
  cob = checkout -b ;checkout new branch
  cS = commit -S
  c = commit
  a = add
  p = pull --rebase --prune
  pup = push --set-upstream origin ;push up
  po = push origin
  s = status -sb
  d = diff
  dt = difftool
  b = branch
  ap = add -p ;add patch, pick the changes you want
  all = add -A ;add all
  lf = log --format=format:'%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(reset) %C(bold green)(%ar)%C(reset)%C(bold yellow)%d%C(reset) %C(dim white)%an%C(reset)%n%C(bold magenta)%s%C(reset)%n%n%C(white)%b%C(reset)%n' ;log full
  l = log --color --pretty=format:'%Cred%h%Creset %Cgreen(%cr) %C(bold blue)<%an>%Creset%C(yellow)%d%Creset %s ' --abbrev-commit ;log (short)
  ds = diff --staged ;show diff for all staged files
  f = fetch -v --all
  cleanup = "!git branch --merged | grep -v '\\*' | xargs -n 1 git branch -d"
  r = rebase
  rs = rebase --autostash
  bd = branch -D ;branch delete
  wipe = !git checkout -- . && git clean -df ;wipe all unstaged changes
  wipeall = !git checkout -f && git clean -df ;wipe all changes (staged and unstaged)
  bl = for-each-ref --sort=committerdate refs/heads/ --format="%(committerdate:short)%09%(authorname)%09%1B[0;33m%(refname:short)%1B[m%09" ;branch list
  dlast = diff HEAD^ ;show diff of last commit
  repoclean = !git count-objects -v && git gc --aggressive && git prune && git fsck --full && git count-objects -v
  cm = commit -m
  m = merge --no-ff
  una = reset HEAD ;unstage a file: `git una main.rb`
  undo = reset --soft HEAD^ ;undo last commit and stage changes
  amend = commit --amend --no-edit
  amendm = commit --amend
  listmerged = "!git branch --merged | grep -v '\\*'"
  ca = commit -a
  pstash = pull --autostash
  svnwipe = !git clean -fd && git svn mkdirs
  standup = !git log --since yesterday --pretty=short --author `git config user.email`
  ;undo = "!f() { git reset --hard $(git rev-parse --abbrev-ref HEAD)@{${1-1}}; }; f"
  prune = fetch --prune
  cf = commit --fixup
  ri = rebase --interactive
  ls = log --stat
  col = checkout - ;check out last (branch)
  cp = cherry-pick
  cc = "!git log --format=format: --name-only | egrep -v '^$' | sort | uniq -c | sort -rg | head -10"

[color]
  ui = true
[core]
  excludesfile = ~/.gitignore
[push]
  default = simple
  followTags = true
	autoSetupRemote = true
[status]
  showUntrackedFiles = all
[fetch]
  prune = true
[svn]
  rmdir = true
[diff]
  tool = vimdiff
  algorithm = histogram
[color]
  branch = auto
  diff = auto
  status = auto
[color "branch"]
  current = yellow reverse
  local = yellow
  remote = green
[color "diff"]
  meta = yellow bold
  frag = magenta bold
  old = red
  new = green bold
[color "status"]
  added = green
  changed = red
  untracked = cyan
[merge]
  conflictstyle = zdiff3
[mergetool]
  prompt = false
[rebase]
  autosquash = true
	updateRefs = true
[help]
  autoCorrect = 10
[rerere]
	enabled = true
[credential]
	helper = store
